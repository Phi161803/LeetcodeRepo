/**
 * // This is the Master's API interface.
 * // You should not implement it, or speculate about its implementation
 * class Master {
 *   public:
 *     int guess(string word);
 * };
 */
class Solution {
public:
    void findSecretWord(vector<string>& wordlist, Master& master) {
        int guessresult, leng, r;
        int ct = 10;
        while (ct--){
            leng = wordlist.size();
            r = rand() % leng;
            rand();
            rand();
            guessresult = master.guess(wordlist[r]);
            if(guessresult==6) return;
            vector<string> newlist;
            for(int i = 0; i < leng; i++){
                if(guessresult == diffcount(wordlist[r], wordlist[i])){
                    cout << "pushing back " << wordlist[i] << endl;
                    newlist.push_back(wordlist[i]);
                }
            }
            wordlist = newlist;
        }
    }
    int diffcount(string& a, string& b){
        int dif = 0;
        cout << b << " ";
        for(int i = 0; i < 6; i++){
            dif+= a[i] == b[i];
            cout << dif;
        }
        cout << endl;
        return dif;
    }
};
